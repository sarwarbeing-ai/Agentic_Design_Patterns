{"cells":[{"cell_type":"code","source":["import os\n","from google.adk.agents import LlmAgent\n","from google.adk.tools.mcp_tool.mcp_toolset import MCPToolset, StdioServerParameters\n","\n","# Create a reliable absolute path to a folder named 'mcp_managed_files'\n","# within the same directory as this agent script.\n","# This ensures the agent works out-of-the-box for demonstration.\n","# For production, you would point this to a more persistent and secure location.\n","TARGET_FOLDER_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"mcp_managed_files\")\n","\n","# Ensure the target directory exists before the agent needs it.\n","os.makedirs(TARGET_FOLDER_PATH, exist_ok=True)\n","\n","root_agent = LlmAgent(\n","    model='gemini-2.0-flash',\n","    name='filesystem_assistant_agent',\n","    instruction=(\n","        'Help the user manage their files. You can list files, read files, and write files. '\n","        f'You are operating in the following directory: {TARGET_FOLDER_PATH}'\n","    ),\n","    tools=[\n","        MCPToolset(\n","            connection_params=StdioServerParameters(\n","                command='npx',\n","                args=[\n","                    \"-y\",  # Argument for npx to auto-confirm install\n","                    \"@modelcontextprotocol/server-filesystem\",\n","                    # This MUST be an absolute path to a folder.\n","                    TARGET_FOLDER_PATH,\n","                ],\n","            ),\n","            # Optional: You can filter which tools from the MCP server are exposed.\n","            # For example, to only allow reading:\n","            # tool_filter=['list_directory', 'read_file']\n","        )\n","    ],\n",")"],"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'google.adk'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-1-2988475573.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0magents\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mLlmAgent\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtools\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmcp_tool\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmcp_toolset\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mMCPToolset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mStdioServerParameters\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Create a reliable absolute path to a folder named 'mcp_managed_files'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'google.adk'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"execution_count":1,"metadata":{"id":"BEhuW_V-GoAk","colab":{"base_uri":"https://localhost:8080/","height":393},"executionInfo":{"status":"error","timestamp":1751535603871,"user_tz":-120,"elapsed":106,"user":{"displayName":"Antonio Gulli","userId":"17769953396342459304"}},"outputId":"9d4feb68-f31e-40d3-af45-fb2a7ede1a2e"}},{"cell_type":"code","source":["\n","connection_params = StdioConnectionParams(\n","  server_params={\n","      \"command\": \"python3\",\n","      \"args\": [\"./agent/mcp_server.py\"],\n","      \"env\": {\n","        \"SERVICE_ACCOUNT_PATH\":SERVICE_ACCOUNT_PATH,\n","        \"DRIVE_FOLDER_ID\": DRIVE_FOLDER_ID\n","      }\n","  }\n",")\n","\n","\n","connection_params = StdioConnectionParams(\n","  server_params={\n","    \"command\": \"uvx\",\n","    \"args\": [\"mcp-google-sheets@latest\"],\n","    \"env\": {\n","      \"SERVICE_ACCOUNT_PATH\":SERVICE_ACCOUNT_PATH,\n","      \"DRIVE_FOLDER_ID\": DRIVE_FOLDER_ID\n","    }\n","  }\n",")"],"metadata":{"id":"ly2PHqllqDaM"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}