{"cells":[{"cell_type":"code","source":["# Example: Using InMemorySessionService\n","# This is suitable for local development and testing where data persistence\n","# across application restarts is not required.\n","from google.adk.sessions import InMemorySessionService\n","session_service = InMemorySessionService()"],"outputs":[],"execution_count":null,"metadata":{"id":"2EzLzlDUViAT"}},{"cell_type":"code","source":["# Example: Using DatabaseSessionService\n","# This is suitable for production or development requiring persistent storage.\n","# You need to configure a database URL (e.g., for SQLite, PostgreSQL, etc.).\n","# Requires: pip install google-adk[sqlalchemy] and a database driver (e.g., psycopg2 for PostgreSQL)\n","from google.adk.sessions import DatabaseSessionService\n","# Example using a local SQLite file:\n","db_url = \"sqlite:///./my_agent_data.db\"\n","session_service = DatabaseSessionService(db_url=db_url)"],"outputs":[],"execution_count":null,"metadata":{"id":"PsBeTnUoViAU"}},{"cell_type":"code","source":["# Example: Using VertexAiSessionService\n","# This is suitable for scalable production on Google Cloud Platform, leveraging\n","# Vertex AI infrastructure for session management.\n","# Requires: pip install google-adk[vertexai] and GCP setup/authentication\n","from google.adk.sessions import VertexAiSessionService\n","\n","PROJECT_ID = \"your-gcp-project-id\" # Replace with your GCP project ID\n","LOCATION = \"us-central1\" # Replace with your desired GCP location\n","# The app_name used with this service should correspond to the Reasoning Engine ID or name\n","REASONING_ENGINE_APP_NAME = \"projects/your-gcp-project-id/locations/us-central1/reasoningEngines/your-engine-id\" # Replace with your Reasoning Engine resource name\n","\n","session_service = VertexAiSessionService(project=PROJECT_ID, location=LOCATION)\n","# When using this service, pass REASONING_ENGINE_APP_NAME to service methods:\n","# session_service.create_session(app_name=REASONING_ENGINE_APP_NAME, ...)\n","# session_service.get_session(app_name=REASONING_ENGINE_APP_NAME, ...)\n","# session_service.append_event(session, event, app_name=REASONING_ENGINE_APP_NAME)\n","# session_service.delete_session(app_name=REASONING_ENGINE_APP_NAME, ...)"],"outputs":[],"execution_count":null,"metadata":{"id":"84ZQg2ytViAU"}}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}