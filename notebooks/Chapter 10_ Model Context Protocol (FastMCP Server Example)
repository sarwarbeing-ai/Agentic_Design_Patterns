{"cells":[{"cell_type":"code","source":["# fastmcp_server.py\n","# This script demonstrates how to create a simple MCP server using FastMCP.\n","# It exposes a single tool that generates a greeting.\n","\n","# To run this server:\n","# 1. Make sure you have FastMCP installed: pip install fastmcp\n","# 2. Save this code as fastmcp_server.py\n","# 3. Run from your terminal: python fastmcp_server.py\n","\n","from fastmcp import FastMCP, tool\n","import asyncio # Required for FastMCP's async capabilities\n","\n","# Define a simple tool function.\n","# The `@tool()` decorator registers this Python function as an MCP tool.\n","# The docstring becomes the tool's description for the LLM.\n","@tool()\n","def greet(name: str) -> str:\n","    \"\"\"\n","    Generates a personalized greeting.\n","\n","    Args:\n","        name: The name of the person to greet.\n","\n","    Returns:\n","        A greeting string.\n","    \"\"\"\n","    return f\"Hello, {name}! Nice to meet you.\"\n","\n","# Initialize the FastMCP server.\n","# By default, FastMCP runs on http://localhost:8000\n","# and automatically discovers functions decorated with @tool().\n","mcp_server = FastMCP()\n","\n","# To run the server, you typically use `mcp_server.run()` or `mcp_server.run_async()`.\n","# For a simple script, `run()` is sufficient.\n","if __name__ == \"__main__\":\n","    print(\"Starting FastMCP server...\")\n","    print(\"This server exposes a 'greet' tool.\")\n","    print(\"Access the tool schema at http://localhost:8000/tools.json\")\n","    print(\"Press Ctrl+C to stop the server.\")\n","    # FastMCP's run() method is blocking and starts the server.\n","    # It handles the asyncio event loop internally.\n","    mcp_server.run()"],"outputs":[],"execution_count":null,"metadata":{"id":"HPO9HKY-Gnfh"}}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}